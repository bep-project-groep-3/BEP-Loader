package org.nl.hu.sie.bep.loader.models;

import com.mongodb.client.AggregateIterable;
import org.bson.Document;
import org.junit.Before;
import org.junit.Test;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class DatabaseInformationRetrieverTest {

    private DatabaseInformationRetriever databaseInformationRetrieverUnderTest;

    @Before
    public void setUp() {
        databaseInformationRetrieverUnderTest = new DatabaseInformationRetriever();
    }

    @Test
    public void testGetCustomerInformation() {
        // Setup
        final int month = 0;
        final List<Data> expectedResult = Arrays.asList();

        // Run the test
        final List<Data> result = databaseInformationRetrieverUnderTest.getCustomerInformation(month);

        // Verify the results
        assertEquals(expectedResult, result);
    }

    @Test
    public void testGetInvoiceData() {
        // Setup
        final int month = 0;
        final AggregateIterable<Document> expectedResult = null;

        // Run the test
        final AggregateIterable<Document> result = databaseInformationRetrieverUnderTest.getInvoiceData(month);

        // Verify the results
        assertEquals(expectedResult, result);
    }

    @Test
    public void testPrepare() throws Exception {
        // Setup
        final String statement = "statement";
        final PreparedStatement expectedResult = null;

        // Run the test
        final PreparedStatement result = databaseInformationRetrieverUnderTest.prepare(statement);

        // Verify the results
        assertEquals(expectedResult, result);
    }

    @Test(expected = SQLException.class)
    public void testPrepare_ThrowsSQLException() throws Exception {
        // Setup
        final String statement = "statement";

        // Run the test
        databaseInformationRetrieverUnderTest.prepare(statement);
    }

    @Test
    public void testPrepare1() throws Exception {
        // Setup
        final String statement = "statement";
        final int autoGeneratedKeys = 0;
        final PreparedStatement expectedResult = null;

        // Run the test
        final PreparedStatement result = databaseInformationRetrieverUnderTest.prepare(statement, autoGeneratedKeys);

        // Verify the results
        assertEquals(expectedResult, result);
    }

    @Test(expected = SQLException.class)
    public void testPrepare_ThrowsSQLException1() throws Exception {
        // Setup
        final String statement = "statement";
        final int autoGeneratedKeys = 0;

        // Run the test
        databaseInformationRetrieverUnderTest.prepare(statement, autoGeneratedKeys);
    }

    @Test
    public void testExecuteQuery() throws Exception {
        // Setup
        final PreparedStatement statement = null;
        final ResultSet expectedResult = null;

        // Run the test
        final ResultSet result = databaseInformationRetrieverUnderTest.executeQuery(statement);

        // Verify the results
        assertEquals(expectedResult, result);
    }

    @Test(expected = SQLException.class)
    public void testExecuteQuery_ThrowsSQLException() throws Exception {
        // Setup
        final PreparedStatement statement = null;

        // Run the test
        databaseInformationRetrieverUnderTest.executeQuery(statement);
    }

    @Test
    public void testClose() {
        // Setup
        final PreparedStatement preparedStatement = null;
        final ResultSet resultSet = null;

        // Run the test
        databaseInformationRetrieverUnderTest.close(preparedStatement, resultSet);

        // Verify the results
    }
}
